{
    "collab_server" : "",
    "contents" : "\n\nlibrary(MASS)\nlibrary(fitdistrplus)\n\nremove_outliers <- function(x, na.rm = TRUE, ...) {\n  qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)\n  H <- 1.5 * IQR(x, na.rm = na.rm)\n  y <- x\n  y[x < (qnt[1] - H)] <- NA\n  y[x > (qnt[2] + H)] <- NA\n  y\n}\n\nplot_histogram <- function(data){\n  \n  hist(data, # histogram\n       col = \"peachpuff\", # column color\n       border = \"black\", \n       prob = TRUE, # show densities instead of frequencies\n       # xlim = c(36,38.5),\n       # ylim = c(0,3),\n       xlab = \"Variable\",\n       main = \"Articles\")\n  lines(density(data), # density plot\n        lwd = 2, # thickness of line\n        col = \"chocolate3\")\n  \n  abline(v = mean(data),\n         col = \"royalblue\",\n         lwd = 2)\n  \n  abline(v = median(data),\n         col = \"red\",\n         lwd = 2)\n  \n  legend(x = \"topright\", # location of legend within plot area\n         c(\"Density plot\", \"Mean\", \"Median\"),\n         col = c(\"chocolate3\", \"royalblue\", \"red\"),\n         lwd = c(2, 2, 2))\n}\n\n\n\narticle_data <- DataArticles[which(DataArticles$date >= \"2017-07-01\" & DataArticles$date < \"2017-08-01\" & DataArticles$repost == 0, DataArticles$post_source_type == \"native\"),]$link_clicks\nvideo_data <- DataVideos[which(DataVideos$date >= \"2017-05-01\" & DataVideos$date < \"2017-08-01\" & DataVideos$video_meme == 0),]$post_video_views\nvideo_meme_data <- DataVideos[which(DataVideos$date >= \"2017-05-01\" & DataVideos$date < \"2017-08-01\" &  DataVideos$video_meme == 1),]$post_video_views\n\narticle_data <- remove_outliers(DataArticles[which(DataArticles$date >= \"2016-01-01\" & DataArticles$repost == 0),]$post_reach)[!is.na(remove_outliers(DataArticles[which(DataArticles$date >= \"2016-01-01\" & DataArticles$repost == 0),]$post_reach))]\n\nvideo_data <- remove_outliers(DataVideos[which(DataVideos$date >= \"2016-01-01\" & DataVideos$repost == 0 & DataVideos$video_meme == 0),]$post_reach)[!is.na(remove_outliers(DataVideos[which(DataVideos$date >= \"2016-01-01\" & DataVideos$repost == 0 & DataVideos$video_meme == 0),]$post_reach))]\n\nvideo_meme_data <- remove_outliers(DataVideos[which(DataVideos$date >= \"2016-01-01\" & DataVideos$repost == 0 & DataVideos$video_meme == 1),]$post_reach)[!is.na(remove_outliers(DataVideos[which(DataVideos$date >= \"2016-01-01\" & DataVideos$repost == 0 & DataVideos$video_meme == 1),]$post_reach))]\n\nphoto_data <- remove_outliers(DataPhotos[which(DataPhotos$date >= \"2016-01-01\" & DataPhotos$repost == 0),]$post_reach)[!is.na(remove_outliers(DataPhotos[which(DataPhotos$date >= \"2016-01-01\" & DataPhotos$repost == 0),]$post_reach))]\n\n\nplotdist(article_data, histo = TRUE, demp = TRUE)\n\nfln_articles <- fitdist(article_data, \"lnorm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"lognormal\")\ndenscomp(list(fln_articles), legendtext = plot.legend)\nqqcomp(list(fln_articles), legendtext = plot.legend)\ncdfcomp(list(fln_articles), legendtext = plot.legend)\nppcomp(list(fln_articles), legendtext = plot.legend)\n\n\nplotdist(log(article_data), histo = TRUE, demp = TRUE)\n\nn_articles <- fitdist(log(article_data), \"norm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"normal\")\ndenscomp(list(n_articles), legendtext = plot.legend)\nqqcomp(list(n_articles), legendtext = plot.legend)\ncdfcomp(list(n_articles), legendtext = plot.legend)\nppcomp(list(n_articles), legendtext = plot.legend)\n\nexp(qnorm(0.05, mean = n_articles$estimate[1], sd = n_articles$estimate[2]))\nexp(qnorm(0.95, mean = n_articles$estimate[1], sd = n_articles$estimate[2]))\n\n1 - pnorm(log(median(article_data)), mean = n_articles$estimate[1], sd = n_articles$estimate[2])\n\nset.seed(0)\n\nfor(i in 1:10000){\n  monte_carlo_articles[i] <- sum(exp(rnorm(155, mean = n_articles$estimate[1], sd = n_articles$estimate[2])))\n}\n\nplotdist((monte_carlo_articles), histo = TRUE, demp = TRUE)\nsd(monte_carlo_articles)\n  \nplotdist(log(monte_carlo_articles), histo = TRUE, demp = TRUE)\n\nn_monte_carlo_articles <- fitdist(log(monte_carlo_articles), \"norm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"normal\")\ndenscomp(list(n_monte_carlo_articles), legendtext = plot.legend)\nqqcomp(list(n_monte_carlo_articles), legendtext = plot.legend)\ncdfcomp(list(n_monte_carlo_articles), legendtext = plot.legend)\nppcomp(list(n_monte_carlo_articles), legendtext = plot.legend)\n\nexp(qnorm(0.05, mean = n_monte_carlo_articles$estimate[1], sd = n_monte_carlo_articles$estimate[2]))\nexp(qnorm(0.95, mean = n_monte_carlo_articles$estimate[1], sd = n_monte_carlo_articles$estimate[2]))\n\n\n\nplotdist(video_data, histo = TRUE, demp = TRUE)\n\nfln_videos <- fitdist(video_data, \"lnorm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"lognormal\")\ndenscomp(list(fln_videos), legendtext = plot.legend)\nqqcomp(list(fln_videos), legendtext = plot.legend)\ncdfcomp(list(fln_videos), legendtext = plot.legend)\nppcomp(list(fln_videos), legendtext = plot.legend)\n\n\nplotdist(log(video_data), histo = TRUE, demp = TRUE)\n\nn_videos <- fitdist(log(video_data), \"norm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"normal\")\ndenscomp(list(n_videos), legendtext = plot.legend)\nqqcomp(list(n_videos), legendtext = plot.legend)\ncdfcomp(list(n_videos), legendtext = plot.legend)\nppcomp(list(n_videos), legendtext = plot.legend)\n\nexp(qnorm(0.05, mean = n_videos$estimate[1], sd = n_videos$estimate[2]))\nexp(qnorm(0.95, mean = n_videos$estimate[1], sd = n_videos$estimate[2]))\n\nsum(exp(rnorm(62, mean = n_videos$estimate[1], sd = n_videos$estimate[2])))\n1 - pnorm(log(mean(video_data)), mean = n_videos$estimate[1], sd = n_videos$estimate[2])\n\n\n\nplotdist(video_meme_data, histo = TRUE, demp = TRUE)\n\nfln_video_memes <- fitdist(video_meme_data, \"lnorm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"lognormal\")\ndenscomp(list(fln_video_memes), legendtext = plot.legend)\nqqcomp(list(fln_video_memes), legendtext = plot.legend)\ncdfcomp(list(fln_video_memes), legendtext = plot.legend)\nppcomp(list(fln_video_memes), legendtext = plot.legend)\n\n\nplotdist(log(video_meme_data), histo = TRUE, demp = TRUE)\n\nn_video_memes <- fitdist(log(video_meme_data), \"norm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"normal\")\ndenscomp(list(n_video_memes), legendtext = plot.legend)\nqqcomp(list(n_video_memes), legendtext = plot.legend)\ncdfcomp(list(n_video_memes), legendtext = plot.legend)\nppcomp(list(n_video_memes), legendtext = plot.legend)\n\nexp(qnorm(0.05, mean = n_video_memes$estimate[1], sd = n_video_memes$estimate[2]))\nexp(qnorm(0.95, mean = n_video_memes$estimate[1], sd = n_video_memes$estimate[2]))\n\n\nsum(exp(rnorm(62, mean = n_video_memes$estimate[1], sd = n_video_memes$estimate[2])))\n1 - pnorm(log(mean(video_meme_data)), mean = n_video_memes$estimate[1], sd = n_video_memes$estimate[2])\npnorm(log(40574.16), mean = n_video_memes$estimate[1], sd = n_video_memes$estimate[2])\n\n\n\nplotdist(photo_data, histo = TRUE, demp = TRUE)\n\nfln_photos <- fitdist(photo_data, \"lnorm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"lognormal\")\ndenscomp(list(fln_photos), legendtext = plot.legend)\nqqcomp(list(fln_photos), legendtext = plot.legend)\ncdfcomp(list(fln_photos), legendtext = plot.legend)\nppcomp(list(fln_photos), legendtext = plot.legend)\n\n\n\ngofstat(fln_videos)\n\nfln_articles$estimate[1]\n\n\n\nvideo_meme_data_aug <- DataVideos[which(DataVideos$date >= \"2016-01-01\" & DataVideos$date < \"2017-01-01\" &  DataVideos$video_meme == 1),]$post_video_views\n\nhist(video_meme_data_aug, prob=TRUE, breaks = 200, xlim = c(0, 5000000))\ncurve(dlnorm(x, mean = n_video_memes$estimate[1], sd = n_video_memes$estimate[2]), add=TRUE)\n\n\n## MODEL ------------------------------------------------------------------------------------------------------------------\n\nlibrary(MASS)\nlibrary(fitdistrplus)\n\n\n# 1. Data ----------------------------------\n\n\ndate_range <- c(\"2017-05-01\", \"2017-08-01\")\n\narticle_data <- DataArticles[which(DataArticles$date >= date_range[1] & DataArticles$date < date_range[2] & DataArticles$repost == 0, DataArticles$post_source_type == \"native\"),]$link_clicks\n\narticle_repost_data <- DataArticles[which(DataArticles$date >= date_range[1] & DataArticles$date < date_range[2] & DataArticles$repost == 1, DataArticles$post_source_type == \"native\"),]$link_clicks\n\nvideo_data <- DataVideos[which(DataVideos$date >= date_range[1] & DataVideos$date < date_range[2] & DataVideos$video_meme == 0 & DataVideos$repost == 0, DataVideos$post_source_type == \"native\"),]$post_video_views\n\nvideo_repost_data <- DataVideos[which(DataVideos$date >= date_range[1] & DataVideos$date < date_range[2] & DataVideos$video_meme == 0 & DataVideos$repost == 1, DataVideos$post_source_type == \"native\"),]$post_video_views\n\nvideo_meme_data <- DataVideos[which(DataVideos$date >= date_range[1] & DataVideos$date < date_range[2] & DataVideos$video_meme == 1 & DataVideos$repost == 0, DataVideos$post_source_type == \"native\"),]$post_video_views\n\nvideo_meme_repost_data <- DataVideos[which(DataVideos$date >= date_range[1] & DataVideos$date < date_range[2] & DataVideos$video_meme == 1 & DataVideos$repost == 1, DataVideos$post_source_type == \"native\"),]$post_video_views\n\nmeme_data <- DataPhotos[which(DataPhotos$date >= date_range[1] & DataPhotos$date < date_range[2] & DataPhotos$repost == 0, DataPhotos$post_source_type == \"native\"),]$post_reach\n\nmeme_repost_data <- DataPhotos[which(DataPhotos$date >= date_range[1] & DataPhotos$date < date_range[2] & DataPhotos$repost == 1, DataPhotos$post_source_type == \"native\"),]$post_reach\n\n\n# 2. Dist. Estimation ----------------------------------\n\n\nn_articles <- fitdist(log(article_data), \"norm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"normal\")\ndenscomp(list(n_articles), legendtext = plot.legend)\nqqcomp(list(n_articles), legendtext = plot.legend)\ncdfcomp(list(n_articles), legendtext = plot.legend)\nppcomp(list(n_articles), legendtext = plot.legend)\n\nn_videos <- fitdist(log(video_data), \"norm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"normal\")\ndenscomp(list(n_videos), legendtext = plot.legend)\nqqcomp(list(n_videos), legendtext = plot.legend)\ncdfcomp(list(n_videos), legendtext = plot.legend)\nppcomp(list(n_videos), legendtext = plot.legend)\n\nn_video_memes <- fitdist(log(video_meme_data), \"norm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"normal\")\ndenscomp(list(n_video_memes), legendtext = plot.legend)\nqqcomp(list(n_video_memes), legendtext = plot.legend)\ncdfcomp(list(n_video_memes), legendtext = plot.legend)\nppcomp(list(n_video_memes), legendtext = plot.legend)\n\nn_memes <- fitdist(log(meme_data), \"norm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"normal\")\ndenscomp(list(n_memes), legendtext = plot.legend)\nqqcomp(list(n_memes), legendtext = plot.legend)\ncdfcomp(list(n_memes), legendtext = plot.legend)\nppcomp(list(n_memes), legendtext = plot.legend)\n\n\nn_articles_repo <- fitdist(log(article_repost_data), \"norm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"normal\")\ndenscomp(list(n_articles_repo), legendtext = plot.legend)\nqqcomp(list(n_articles_repo), legendtext = plot.legend)\ncdfcomp(list(n_articles_repo), legendtext = plot.legend)\nppcomp(list(n_articles_repo), legendtext = plot.legend)\n\nn_videos_repo <- fitdist(log(video_repost_data), \"norm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"normal\")\ndenscomp(list(n_videos_repo), legendtext = plot.legend)\nqqcomp(list(n_videos_repo), legendtext = plot.legend)\ncdfcomp(list(n_videos_repo), legendtext = plot.legend)\nppcomp(list(n_videos_repo), legendtext = plot.legend)\n\nn_video_memes_repo <- fitdist(log(video_meme_repost_data), \"norm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"normal\")\ndenscomp(list(n_video_memes_repo), legendtext = plot.legend)\nqqcomp(list(n_video_memes_repo), legendtext = plot.legend)\ncdfcomp(list(n_video_memes_repo), legendtext = plot.legend)\nppcomp(list(n_video_memes_repo), legendtext = plot.legend)\n\nn_memes_repo <- fitdist(log(meme_repost_data), \"norm\")\npar(mfrow = c(2, 2))\nplot.legend <- c(\"normal\")\ndenscomp(list(n_memes_repo), legendtext = plot.legend)\nqqcomp(list(n_memes_repo), legendtext = plot.legend)\ncdfcomp(list(n_memes_repo), legendtext = plot.legend)\nppcomp(list(n_memes_repo), legendtext = plot.legend)\n\n\n\n# 3. Conf. Intervals -------------------------------------------\n\nalpha <- 0.05\n\nexp(qnorm(alpha/2, mean = n_articles$estimate[1], sd = n_articles$estimate[2]))\nexp(qnorm(1 - alpha/2, mean = n_articles$estimate[1], sd = n_articles$estimate[2]))\n\nexp(qnorm(alpha/2, mean = n_articles_repo$estimate[1], sd = n_articles_repo$estimate[2]))\nexp(qnorm(1 - alpha/2, mean = n_articles_repo$estimate[1], sd = n_articles_repo$estimate[2]))\n\n\nexp(qnorm(alpha/2, mean = n_videos$estimate[1], sd = n_videos$estimate[2]))\nexp(qnorm(1 - alpha/2, mean = n_videos$estimate[1], sd = n_videos$estimate[2]))\n\nexp(qnorm(alpha/2, mean = n_videos_repo$estimate[1], sd = n_videos_repo$estimate[2]))\nexp(qnorm(1 - alpha/2, mean = n_videos_repo$estimate[1], sd = n_videos_repo$estimate[2]))\n\n\nexp(qnorm(alpha/2, mean = n_video_memes$estimate[1], sd = n_video_memes$estimate[2]))\nexp(qnorm(1 - alpha/2, mean = n_video_memes$estimate[1], sd = n_video_memes$estimate[2]))\n\nexp(qnorm(alpha/2, mean = n_video_memes_repo$estimate[1], sd = n_video_memes_repo$estimate[2]))\nexp(qnorm(1 - alpha/2, mean = n_video_memes_repo$estimate[1], sd = n_video_memes_repo$estimate[2]))\n\n\nexp(qnorm(alpha/2, mean = n_memes$estimate[1], sd = n_memes$estimate[2]))\nexp(qnorm(1 - alpha/2, mean = n_memes$estimate[1], sd = n_memes$estimate[2]))\n\nexp(qnorm(alpha/2, mean = n_memes_repo$estimate[1], sd = n_memes_repo$estimate[2]))\nexp(qnorm(1 - alpha/2, mean = n_memes_repo$estimate[1], sd = n_memes_repo$estimate[2]))\n\n# 4. Monte Carlo Sim. ------------------------------------------\n\nset.seed(0)\n\nmonte_carlo_articles <- NA\nmonte_carlo_videos <- NA\nmonte_carlo_video_memes <- NA\nmonte_carlo_memes <- NA\n\nmonte_carlo_articles_repo <- NA\nmonte_carlo_videos_repo <- NA\nmonte_carlo_video_memes_repo <- NA\nmonte_carlo_memes_repo <- NA\n\nfor(i in 1:100000){\n  monte_carlo_articles[i] <- sum(exp(rnorm(155, mean = n_articles$estimate[1], sd = n_articles$estimate[2])))\n  monte_carlo_videos[i] <- sum(exp(rnorm(62, mean = n_videos$estimate[1], sd = n_videos$estimate[2])))\n  monte_carlo_video_memes[i] <- sum(exp(rnorm(62, mean = n_video_memes$estimate[1], sd = n_video_memes$estimate[2])))\n  monte_carlo_memes[i] <- sum(exp(rnorm(186, mean = n_memes$estimate[1], sd = n_memes$estimate[2])))\n  \n  monte_carlo_articles_repo[i] <- sum(exp(rnorm(30, mean = n_articles_repo$estimate[1], sd = n_articles_repo$estimate[2])))\n  monte_carlo_videos_repo[i] <- sum(exp(rnorm(15, mean = n_videos_repo$estimate[1], sd = n_videos_repo$estimate[2])))\n  monte_carlo_video_memes_repo[i] <- sum(exp(rnorm(15, mean = n_video_memes_repo$estimate[1], sd = n_video_memes_repo$estimate[2])))\n  monte_carlo_memes_repo[i] <- sum(exp(rnorm(60, mean = n_memes_repo$estimate[1], sd = n_memes_repo$estimate[2])))\n}\n\nmonte_carlo_page <- monte_carlo_articles + monte_carlo_videos + monte_carlo_video_memes + monte_carlo_memes + monte_carlo_articles_repo + monte_carlo_videos_repo + monte_carlo_video_memes_repo + monte_carlo_memes_repo\n\nplotdist(monte_carlo_page, histo = TRUE, demp = TRUE)\n\nplotdist(monte_carlo_articles, histo = TRUE, demp = TRUE)\nplotdist(monte_carlo_videos, histo = TRUE, demp = TRUE)\nplotdist(monte_carlo_video_memes, histo = TRUE, demp = TRUE)\nplotdist(monte_carlo_memes, histo = TRUE, demp = TRUE)\n\nplot_histogram(monte_carlo_articles)\nplot_histogram(monte_carlo_videos)\nplot_histogram(monte_carlo_video_memes)\nplot_histogram(monte_carlo_memes)\n",
    "created" : 1503438083501.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1819736100",
    "id" : "58E37F24",
    "lastKnownWriteTime" : 1504226092,
    "last_content_update" : 1504226092071,
    "path" : "~/WeeklyRecApp/PDF Estimation.R",
    "project_path" : "PDF Estimation.R",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}